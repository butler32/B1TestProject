// <auto-generated />
using System;
using B1TestProject.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace B1TestProject.Infrastructure.Migrations
{
    [DbContext(typeof(TestProjDbContext))]
    partial class TestProjDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("B1TestProject.Domain.Entities.BalanceSheetEntryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Class")
                        .HasColumnType("integer");

                    b.Property<Guid>("ExcelFilesId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("IncomingBalanceActive")
                        .HasColumnType("numeric");

                    b.Property<decimal>("IncomingBalancePassive")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TurnoverCredit")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TurnoverDebit")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ExcelFilesId");

                    b.ToTable("BalanceSheetEntries");
                });

            modelBuilder.Entity("B1TestProject.Domain.Entities.ExcelFilesEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ExcelFileId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ExcelFiles");
                });

            modelBuilder.Entity("B1TestProject.Domain.Entities.TextLineEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("DoubleNum")
                        .HasColumnType("double precision");

                    b.Property<int>("IntegerNum")
                        .HasColumnType("integer");

                    b.Property<string>("Latin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Russian")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TextLines");
                });

            modelBuilder.Entity("B1TestProject.Domain.Entities.BalanceSheetEntryEntity", b =>
                {
                    b.HasOne("B1TestProject.Domain.Entities.ExcelFilesEntity", "ExcelFiles")
                        .WithMany("BalanceSheetEntries")
                        .HasForeignKey("ExcelFilesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExcelFiles");
                });

            modelBuilder.Entity("B1TestProject.Domain.Entities.ExcelFilesEntity", b =>
                {
                    b.Navigation("BalanceSheetEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
